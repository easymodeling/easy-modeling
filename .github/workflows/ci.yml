name: CI

on:
  push:
  pull_request:
    types: [ opened, synchronize, reopened ]

env:
  OSSRH_USERNAME: 'OSSRH_USERNAME'
  OSSRH_PASSWORD: 'OSSRH_PASSWORD'

jobs:
  unit-test:
    name: "Test on JDK ${{ matrix.java }}"
    strategy:
      matrix:
        java: [ 8, 11, 17 ]
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: 'Cancel previous runs'
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - name: 'Cache gradle dependencies'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
      - name: 'Run test'
        shell: bash
        run: ./gradlew clean test

  sonarqube:
    name: Sonarqube
    runs-on: ubuntu-latest
    steps:
      - name: 'Cancel previous runs'
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew jacocoTestReport sonarqube --info

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ unit-test ]
    env:
      OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
      OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - name: 'Cache gradle dependencies'
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
#      - name: 'Set up JDK 8'
#        uses: actions/setup-java@v2
#        with:
#          java-version: 8
#          distribution: 'zulu'
#      - name: 'Build'
#        shell: bash
#        run: ./gradlew clean build
#      - name: 'Decode Secret'
#        run: |
#          echo "${{secrets.SIGNING_SECRET_KEY_RING_B64}}" > ~/.gradle/secring.gpg.b64
#          base64 -d ~/.gradle/secring.gpg.b64 > ~/.gradle/secring.gpg
#      - name: 'Publish Artifact'
#        run: |
#          ./gradlew publish \
#            -Psigning.keyId=${{secrets.SIGNING_KEY_ID}} \
#            -Psigning.password="${{secrets.SIGNING_KEY_PASSWORD}}" \
#            -Psigning.secretKeyRingFile=$(echo ~/.gradle/secring.gpg)
