name: RELEASE

on:
  push:
    tags:
      - '*'

env:
  OSSRH_USERNAME: 'OSSRH_USERNAME'
  OSSRH_PASSWORD: 'OSSRH_PASSWORD'

jobs:
  unit-test:
    name: "Test on JDK ${{ matrix.java }}"
    strategy:
      matrix:
        java: [ '8', '11', '17' ]
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: 'Cancel previous runs'
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - uses: ./.github/actions/set-up-jdk
        with:
          jdk-version: '${{ matrix.java }}'
      - name: 'Run test'
        run: ./gradlew clean test

  sonarqube:
    name: Sonarqube Report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: ./.github/actions/set-up-jdk
        with:
          jdk-version: '11'
      - uses: ./.github/actions/sonarqube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release-draft:
    name: "Release Draft"
    runs-on: ubuntu-latest
    needs:
      - unit-test
      - sonarqube
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - uses: ./.github/actions/set-up-jdk
      - name: 'Compare gradle version to git tag'
        shell: bash
        run: |
          GRADLE_VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
          GIT_TAG=${GITHUB_REF#refs/*/}
          [[ "${GRADLE_VERSION}" == "${GIT_TAG}" ]]
      - if: ${{ success() }}
        name: 'Create release draft'
        uses: ncipollo/release-action@v1
        with:
          draft: true
          prerelease: true
          token: ${{ github.token }}
      - name: 'Release version'
        id: release-version
        run: echo "::set-output name=RELEASE_VERSION::${GITHUB_REF#refs/*/}"
    outputs:
      RELEASE_VERSION: ${{ steps.release-version.outputs.RELEASE_VERSION }}

  snapshot-artifact:
    name: Publish Snapshot Artifact
    runs-on: ubuntu-latest
    environment: maven-central-snapshot
    needs:
      - release-draft
    env:
      OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
      OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}
      OSSRH_URL: ${{secrets.OSSRH_URL}}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - uses: ./.github/actions/set-up-jdk
      - uses: ./.github/actions/publish-artifact
        with:
          signing-secret-key-ring-b64: ${{ secrets.SIGNING_SECRET_KEY_RING_B64 }}
          signing-key-id: ${{ secrets.SIGNING_KEY_ID }}
          signing-key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

  release-artifact:
    name: Publish Release Artifact
    runs-on: ubuntu-latest
    environment: maven-central-release
    needs:
      - release-draft
    if: ${{ !endsWith(needs.release-draft.outputs.RELEASE_VERSION, '-SNAPSHOT') }}
    env:
      OSSRH_USERNAME: ${{secrets.OSSRH_USERNAME}}
      OSSRH_PASSWORD: ${{secrets.OSSRH_PASSWORD}}
      OSSRH_URL: ${{secrets.OSSRH_URL}}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v2
      - uses: ./.github/actions/set-up-jdk
      - uses: ./.github/actions/publish-artifact
        with:
          signing-secret-key-ring-b64: ${{ secrets.SIGNING_SECRET_KEY_RING_B64 }}
          signing-key-id: ${{ secrets.SIGNING_KEY_ID }}
          signing-key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}
